[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "nhandu"
version = "0.1.3"
description = "A literate programming tool for Python that weaves code and documentation into scientific reports"
readme = "README.md"
requires-python = ">=3.10"
license = "MIT"
authors = [
    {name = "Tiago Tresoldi", email = "tiago.tresoldi@lingfil.uu.se"},
]
keywords = ["literate-programming", "scientific-computing", "reports", "documentation"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Documentation",
    "Topic :: Scientific/Engineering",
]

dependencies = [
    "pyyaml>=6.0",
    "mistune>=3.0",
    "pygments>=2.19",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "pytest-cov>=4.0",
    "mypy>=1.0",
    "ruff>=0.1.0",
    "types-PyYAML",
    "types-Pygments",
    "build>=1.0",
    "twine>=4.0",
]
test = [
    "numpy>=1.20",
    "pandas>=2.0",
    "matplotlib>=3.5",
]
all = ["nhandu[dev,test]"]

[project.scripts]
nhandu = "nhandu.__main__:main"

[project.urls]
Homepage = "https://github.com/tresoldi/nhandu"
Issues = "https://github.com/tresoldi/nhandu/issues"

[tool.setuptools.packages.find]
where = ["src"]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_any_unimported = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
check_untyped_defs = true
strict_equality = true

[tool.ruff]
target-version = "py310"
line-length = 88

[tool.ruff.lint]
select = [
    "E",    # pycodestyle
    "F",    # pyflakes
    "W",    # pycodestyle warnings
    "B",    # flake8-bugbear
    "I",    # isort
    "N",    # pep8-naming
    "UP",   # pyupgrade
    "ANN",  # flake8-annotations
    "S",    # flake8-bandit
    "C90",  # mccabe complexity
    "T20",  # flake8-print
    "RUF",  # ruff-specific rules
]
ignore = [
    "S101",    # Use of assert (needed for tests)
    "S102",    # Use of exec (needed for code execution)
    "S307",    # Use of eval (needed for expression evaluation)
    "T201",    # Use of print (needed for CLI output)
    "C901",    # Complex functions (acceptable for main functions)
    "S110",    # try-except-pass (acceptable for graceful error handling)
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101", "ANN", "F841"]

[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = "--cov=nhandu --cov-report=term-missing --cov-report=html"

[tool.coverage.run]
source = ["src/nhandu"]
omit = ["*/tests/*", "*/__main__.py"]

[tool.coverage.html]
directory = "tests/htmlcov"

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]